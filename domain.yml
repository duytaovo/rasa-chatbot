version: "3.1"

intents:
  - greet
  - thank
  - bye
  - ask_func_list
  - ask_name
  - give_name
  - open
  - address
  - phone
  - discount
  - payment
  - ship
  - sell
  - iphone
  - samsung
  - fix
  - warranty
  - buy_phone_laptop
  - give_information
  - not_applicable
  # english
  - greetE
  - byeE
  - buy_phone_laptopE
  - give_informationE
  - not_applicableE
  - affirm
  - ask_how_contribute
  - ask_question_in_forum
  - ask_when_next_event
  - ask_which_events
  - ask_why_contribute
  - book_demo
  - broken
  - canthelp
  - chitchat:
      use_entities: []
  - contact_sales
  - deny
  - enter_data:
      use_entities: []
  - explain
  - faq:
      use_entities:
        - product
  - feedback
  - get_started_intro
  - get_started_playground
  - greet
  - how_to_get_started
  - human_handoff
  - install_rasa
  - need_help_broad
  - next_step
  - nlu_generation_tool_recommendation
  - nlu_info
  - out_of_scope
  - pipeline_recommendation
  - react_negative
  - react_positive
  - restart
  - signup_newsletter
  - source_code
  - suggestion
  - switch
  - technical_question
  - thank
  - trigger_rephrase
  - why_rasa
  - nlu_fallback
entities:
  - cust_sex
  - cust_name
  - category
  - ram
  - price
  - camera
  - amount-of-money
  - company
  - current_api
  - email
  - entity
  - feedback_value
  - job_function
  - language
  - location
  - name
  - nlu_part
  - number
  - product
  - user_type
  - install_type
  - retrieval_intent
  - can_use_spacy
  - shown_privacy
  - entity_extractor
  - docs_found
  - onboarding
slots:
  cust_sex:
    type: text
    mappings:
      - type: from_entity
        entity: cust_sex
    influence_conversation: false
  cust_name:
    type: text
    mappings:
      - type: from_entity
        entity: cust_name
    influence_conversation: false
  category:
    type: text
    mappings:
      - type: from_entity
        entity: category
    influence_conversation: false
  ram:
    type: text
    mappings:
      - type: from_entity
        entity: ram
    influence_conversation: false
  camera:
    type: text
    mappings:
      - type: from_entity
        entity: camera
    influence_conversation: false
  price:
    type: text
    mappings:
      - type: from_entity
        entity: camera
    influence_conversation: false

  current_api:
    type: categorical
    values:
      - dialogflow
      - luis
    mappings:
      - type: from_entity
        entity: camera

  language:
    type: categorical
    values:
      - english
    mappings:
      - type: from_entity
        entity: camera

  shown_privacy:
    type: any
    mappings:
      - type: from_entity
        entity: camera

  entity_extractor:
    type: categorical
    values:
      - crfentityextractor
      - spacyentityextractor
      - ducklinghttpextractor
    mappings:
      - type: from_entity
        entity: camera

  product:
    type: categorical
    values:
      - core
      - nlu
      - x
      - rasa
      - all
      - playground
    mappings:
      - type: from_entity
        entity: camera

  can_use_spacy:
    type: bool
    mappings:
      - type: from_entity
        entity: camera

  docs_found:
    type: bool
    mappings:
      - type: from_entity
        entity: camera
  onboarding:
    type: bool
    mappings:
      - type: from_entity
        entity: camera
  install_type:
    type: categorical
    values:
    - local
    - server
    mappings:
      - type: from_entity
        entity: camera

  nlu_part:
    type: categorical
    values:
    - entity recognition
    - intent classification
    - duckling
    mappings:
      - type: from_entity
        entity: camera
    
responses:
  utter_greet:
    - text: "K√≠nh ch√†o Qu√Ω kh√°ch! Qu√Ω kh√°ch vui l√≤ng cho bi·∫øt t√™n ƒë·ªÉ ti·ªán x∆∞ng h√¥ ƒë∆∞·ª£c kh√¥ng ·∫°?"
  utter_greet_with_name:
    - text: "K√≠nh ch√†o {cust_sex} {cust_name}. Techstore Shop c√≥ th·ªÉ gi√∫p g√¨ ƒë∆∞·ª£c {cust_sex} {cust_name} ·∫°?"
  utter_bye:
    - text: "K√≠nh ch√†o t·∫°m bi·ªát v√† mong s·ªõm g·∫∑p l·∫°i qu√Ω kh√°ch!"
    - text: "K√≠nh ch√†o t·∫°m bi·ªát v√† ch√∫c qu√Ω kh√°ch m·ªôt ng√†y t·ªët l√†nh!"
  utter_thank:
    - text: "C·∫£m ∆°n qu√Ω kh√°ch qu√° khen ah!"
    - text: "D·∫° kh√¥ng c√≥ g√¨, ƒë√≥ l√† tr√°ch nhi·ªám c·ªßa em m√†!"
  utter_func_list:
    - text: "Em c√≥ th·ªÉ l√†m ƒë∆∞·ª£c r·∫•t nhi·ªÅu th·ª©: t∆∞ v·∫•n mua h√†ng, gi·ªõi thi·ªáu s·∫£n ph·∫©m, tr·∫£ l·ªùi nh·ªØng g√¨ qu√Ω kh√°ch mu·ªën bi·∫øt!"
  utter_ask_name:
    - text: "Em h·ªç Techstore - Mobile, t√™n Bot! Ng∆∞·ªùi ta hay g·ªçi em l√† HK - Mobile Bot th√¥ng minh xinh ƒë·∫πp gi·ªèi giang nh·∫•t v≈© tr·ª• ·∫°! Qu√Ω kh√°ch c·∫ßn tr·ª£ gi√∫p g√¨ ·∫°?"
  utter_open:
    - text: "C·ª≠a h√†ng ch√∫ng t√¥i m·ªü c·ª≠a l√∫c 9.00 v√† ƒë√≥ng v·ª≠a l√∫c 20.00 h√†ng ng√†y ·∫°"
  utter_address:
    - text: "ƒê·ªãa ch·ªâ c·ªßa c·ª≠a h√†ng n·∫±m ·ªü s·ªë 1, V√µ VƒÉn Ng√¢n, ph∆∞·ªùng Linh Chi·ªÉu, th√†nh ph·ªï Th·ªß ƒê·ª©c"
  utter_phone:
    - text: "Hotline c·ªßa c·ª≠a h√†ng l√†: 0342229515"
  utter_discount:
    - text: "C·ª≠a h√†ng c√≥ khuy·∫øn m√£i ƒë∆∞·ª£c thay ƒë·ªïi li√™n t·ª•c trong th√°ng: hi·ªán t·∫°i c√≥ khuy·∫øn m√£i nƒÉm h·ªçc m·ªõi... B·∫°n vui l√≤ng ƒë·∫øn tr·ª±c ti·∫øp c·ª≠a h√†ng ho·∫∑c ƒë·ªÉ l·∫°i s·ªë ƒëi·ªán tho·∫°i ƒë·ªÉ nh√¢n vi√™n ch√∫ng t√¥i c√≥ th·ªÉ t∆∞ v·∫•n chi ti·∫øt h∆°n ·∫°."
  utter_payment:
    - text: "C·ª≠a h√†ng c√≥ nhi·ªÅu ph∆∞∆°ng th·ª©c thanh to√°n nh∆∞ thanh to√°n b·∫±ng ti·ªÅn m·∫∑t, thanh to√°n qua h·ªá th·ªëng thanh to√°n ƒëi·ªán th·ª≠ VNPAY"
  utter_ship:
    - text: "Th·ªùi gian v·∫≠n chuy·ªÉn tu·ª≥ thu·ªôc v√†o t·ª´ng v√πng mi·ªÅn ·∫°. Th·ªùi gian cho n·ªôi th√†nh ph·ªë l√† 1-3 ng√†y c√≤n c√°c t·ªânh th√†nh th∆∞·ªùng 5-7 ng√†y tu·ª≥ v√†o th·ªùi ti·∫øc ·∫°. ƒê∆°n h√†ng s·∫Ω ƒë∆∞·ª£c mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn."
  utter_sell:
    - text: "C·ª≠a h√†ng ch√∫ng em b√°n r·∫•t nhi·ªÅu s·∫£n ph·∫©m thu·ªôc nh·ªØng danh m·ª•c ch√≠nh: ƒëi·ªán tho·∫°i, m√°y t√≠nh b·∫£ng, ƒë·ªìng h·ªì, laptop, √¢m thanh v√† ph·ª• ki·ªán,..."
  utter_iphone:
    - text: "Th∆∞a qu√Ω kh√°ch, c·ª≠a h√†ng ch√∫ng t√¥i c√≥ b√°n t·∫•t c·∫£ c√°c d√≤ng ƒëi·ªán iphone c√≥ tr√™n th·ªã tr∆∞·ªùng."
  utter_samsung:
    - text: "Th∆∞a qu√Ω kh√°ch, c·ª≠a h√†ng ch√∫ng t√¥i c√≥ b√°n t·∫•t c·∫£ c√°c d√≤ng ƒëi·ªán samsung c√≥ tr√™n th·ªã tr∆∞·ªùng."
  utter_fix:
    - text: "Th∆∞a qu√Ω kh√°ch, hi·ªán t·∫°i c·ª≠a h√†ng ch√∫ng t√¥i kh√¥ng s·ª≠a ch·ª≠a ƒëi·ªán tho·∫°i, ph·ª• ki·ªán m√† ch·ªâ b·∫£o h√†nh s·∫£n ph·∫©m c√≤n trong th·ªùi gian b·∫£o h√†nh. "
  utter_warranty:
    - text: "Th∆∞a qu√Ω kh√°ch, c·ª≠a h√†ng ch√∫ng t√¥i th·ªùi gian b·∫£o h√†nh l√† kho·∫£ng t·ª´ 10 - 15 ng√†y tu·ª≥ th·ªùi gian c·ªßa h√£ng. "
  utter_unclear:
    - text: "Th∆∞a qu√Ω kh√°ch, hi·ªán t·∫°i t√¥i ch∆∞a hi·ªÉu ƒë∆∞·ª£c y√™u c·∫ßu c·ªßa Qu√Ω kh√°ch. "
  utter_ask_ram:
    - text: B·∫°n ƒëang t√¨m ki·∫øm RAM bao nhi√™u GB?
  utter_ask_camera:
    - text: B·∫°n ƒëang t√¨m ki·∫øm chi·∫øc m√°y ·∫£nh megapixel n√†o?
  utter_ask_battery:
    - text: B·∫°n ƒëang t√¨m ki·∫øm dung l∆∞·ª£ng pin bao nhi√™u tr√™n ƒëi·ªán tho·∫°i di ƒë·ªông?
  utter_ask_budget:
    - text: Ng√¢n s√°ch c·ªßa b·∫°n l√† bao nhi√™u?
  utter_wrong_budget:
    - text: Vui l√≤ng nh·∫≠p ng√¢n s√°ch b·∫±ng USD v√† d∆∞·ªõi 4000.
  utter_wrong_ram:
    - text: Vui l√≤ng nh·∫≠p gi√° tr·ªã ƒë√∫ng cho ram.
  utter_wrong_battery:
    - text: Vui l√≤ng nh·∫≠p gi√° tr·ªã ƒë√∫ng cho pin.
  utter_wrong_camera:
    - text: Vui l√≤ng nh·∫≠p ƒë√∫ng gi√° tr·ªã cho camera.
  utter_ask_battery_backup:
    - text: B·∫°n ƒëang xem m·ª©c pin d·ª± ph√≤ng t·ªëi thi·ªÉu l√† bao nhi√™u?
  utter_ask_storage_capacity:
    - text: Dung l∆∞·ª£ng l∆∞u tr·ªØ b·∫°n ƒëang t√¨m l√† bao nhi√™u?
  utter_wrong_battery_backup:
    - text: Vui l√≤ng nh·∫≠p ƒë√∫ng gi√° tr·ªã pin d·ª± ph√≤ng (theo gi·ªù).
  utter_wrong_storage_capacity:
    - text: Vui l√≤ng nh·∫≠p ƒë√∫ng dung l∆∞·ª£ng l∆∞u tr·ªØ t√≠nh b·∫±ng GB.
  utter_goodbye:
    - text: It was great talking to you! Goodbye!!
  utter_ask_price:
    - text: What is your budget?
  utter_ask_cameraE:
    - text: What megapixel camera are you looking for? (Write na if not applicable)
  utter_ask_priceE:
    - text: What is your budget?
  utter_ask_ramE:
    - text: How much GB RAM are you looking for?
  utter_goodbyeE:
    - text: Bye
  utter_greetE:
    - text: Welcome. I'm your shopping bot. I can help you in finding a phone or a laptop
  utter_iamabotE:
    - text: I am a bot, powered by Rasa.
  utter_how_can_I_helpE:
    - text: Welcome. I'm your shopping bot. I can help you in finding a phone or a laptop

  utter_already_subscribed:
    - text: Looks like {email} is already subscribed - good choice! If you haven't received a newsletter in a while, maybe check your spam folder üóë
  utter_also_explain_core:
    - text: Would you also like me to explain Dialogue Management?
  utter_also_explain_nlu:
    - text: Would you also like me to explain NLU?
  utter_also_explain_nlucore:
    - text: Would you also like me to explain NLU and Dialogue Management?
  utter_anything_else:
    - text: Is there anything else I can help you with?

  utter_ask_business_email:
    - text: What's your business email?
  utter_ask_company:
    - text: What company do you work for?
  utter_ask_continue_newsletter:
    - text: Do you still want to subscribe to the newsletter?
  utter_ask_continue_rasa_init:
    - text: Do you want to go ahead with the steps to create a contextual assistant?
  utter_ask_continue_sales:
    - text: Do you still want to talk to sales?
  utter_ask_problem_description:
    - text: Can you describe the problem you're having?
  utter_ask_docs_help:
    - buttons:
        - payload: /affirm
          title: üëç
        - payload: /deny
          title: üëé
      text: Did that help?
  utter_ask_email:
    - text: What's your email address?
  utter_ask_entities:
    - text: What kind of entities do you want to extract?
  utter_ask_explain_nlucorex:
    - text: Would you like to know more about Rasa Open Source or Rasa X?
  utter_ask_feedback:
    - buttons:
        - payload: '/feedback{{"feedback_value": "positive"}}'
          title: üëç
        - payload: '/feedback{{"feedback_value": "negative"}}'
          title: üëé
      text: How is this conversation going?
  utter_ask_feedback_message:
    - text: I'm sorry I couldn't help you. Please let me know if you have any suggestions for how I can improve.
  utter_ask_for_nlu_specifics:
    - text: Anything in particular you'd like to know about, e.g. intent classification or entity recognition?
  utter_ask_goal:
    - text: If you're new to Rasa, I can help you get started! If you've already started building an assistant, you can also ask me about the different parts of Rasa üê¶
  utter_ask_if_problem:
    - text: Did you encounter any problems during installation?
  utter_ask_job_function:
    - text: What's your job? üï¥
  utter_ask_x_local_server:
    - text: Are you trying to install Rasa X on your local machine or on a server?
  utter_ask_migration:
    - text: Are you migrating from another tool?
  # utter_ask_name:
  # - text: What's your name?
  utter_ask_person_name:
    - text: What's your name?
  utter_ask_playground_install_info:
    - text: Which would you like to do first?
      buttons:
        - payload: /get_started_playground
          title: Try out Rasa in the online Rasa Playground
        - payload: /install_rasa
          title: Install Rasa on your own computer
        - payload: '/trigger_response_selector{{"retrieval_intent":"chitchat/ask_whatisrasa"}}'
          title: Find out more about Rasa
  utter_playground_intro:
    - text: |-
        In the [Rasa Playground](https://rasa.com/docs/rasa/playground) you can
          build a Rasa prototype entirely online. Once you've built your prototype, you can talk to
          your bot online and download your project to continue developing it locally.
  utter_ask_playground_help:
    - text: Do you have any questions or issues you're running into with Rasa Playground?
  utter_ask_use_case:
    - text: What kind of assistant do you want to build with Rasa?
  utter_ask_which_product:
    - text: Ok, which product would you like to know more about? Rasa Open Source or Rasa X?
  utter_ask_which_tool:
    - text: Which tool are you migrating from?
  utter_awesome:
    - text: Awesome, thanks! üëç
    - text: Sweet, thank you! üòÑ
    - text: Thanks! üëå
    - text: Cool, thank you!
  utter_built_bot_before:
    - text: Have you built a contextual assistant or a bot before?
  # utter_bye:
  # - text: Goodbye!
  # - text: Bye!
  # - text: Ciao!
  # - text: Bye, was nice talking to you!
  # - text: Bye bye!
  utter_can_do:
    - text: Sure thing!
    - text: Can do!
    - text: You got it. üëç
  utter_canthelp:
    - text: I'm sorry I couldn't help you. If you have general questions about Rasa, please head to our [forum](https://forum.rasa.com/), otherwise contact us at [hi@rasa.com](mailto:hi@rasa.com) for anything else.
  utter_cantsignup:
    - text: I can't sign you up if you don't provide your email üòâ
  utter_change_mind:
    - text: You can still change your mind below though.
  utter_chatbot_tutorial:
    - text: No problem, here's a [course on Datacamp](https://www.datacamp.com/courses/building-chatbots-in-python) that teaches you about building your own chatbot ü§ì
  utter_confirm_salesrequest:
    - text: Thanks a bunch, we'll be in touch soon! ‚úâÔ∏è
  utter_confirmationemail:
    - text: We sent a confirmation email to {email}.
  utter_could_not_subscribe:
    - text: Something went wrong, I couldn't subscribe you to the Rasa newsletter üòû
  utter_contact_email:
    - text: You can‚Äôt speak to a human directly in this chat, but you can email us at hi@rasa.com.
  utter_crf:
    - text: For custom entities like that, I would suggest using the [CRFEntityExtractor](https://rasa.com/docs/rasa/nlu/components/#crfentityextractor) component. Read more about how to annotate entities in your data [here](https://rasa.com/docs/nlu/dataformat/).
  utter_default:
    - text: Sorry, I didn't get that ü§∑. Could you please rephrase?
    - text: I didn't understand, could you rephrase that?
    - text: I'm sorry, but I didn't understand you. Could you please rephrase what you just said?
    - text: I'm afraid I didn't get what you just said. Could you rephrase that?
    - text: I didn't quite get that, could you rephrase your message?
    - text: Could you rephrase your message? I didn't get it, I'm sorry.
  utter_direct_to_forum_for_help:
    - text: I've made a note of the problem you're experiencing. In the meantime, if you're still stuck, please ask for help on our [forum](https://forum.rasa.com/).
  utter_docu:
    - text: If you want some more awesome Rasa content, check out our [forum](https://forum.rasa.com/).
  utter_dont_know_nlu_part:
    - text: Hmm, seems like I haven't learned about that part of NLU yet!
  utter_duckling:
    - text: For that entity I'd suggest using the rule-based [DucklingHTTPExtractor](https://rasa.com/docs/rasa/nlu/components/#ducklinghttpextractor) component üê•
  utter_duckling_info:
    - text: Duckling is a rule-based entity recognition library from Facebook. [Here](https://duckling.wit.ai/) is the link to its documentation.
  utter_encourage_building_bot:
    - text: Cool, then good luck with building your first contextual assistant! ü§ñ
  utter_explain_budget:
    - text: If you tell us your budget, we can prepare a package that fits you best.
  utter_explain_business_email:
    - text: We need your business email to contact you afterwards. Otherwise, we cannot help you set up Rasa.
  utter_explain_company:
    - text: Just for completeness.
  utter_explain_core:
    - text: |-
        Dialogue Management (previously known as "Core") decides what happens next in this conversation. Its machine learning-based dialogue management predicts the next best action based on the input from NLU, the conversation history and your training data.
        (Example: Dialogue Management has a confidence of 87% that ask_primary_change is the next best action to confirm with the user if they want to change their primary contact information.)
  utter_explain_job_function:
    - text: Your job function helps us in understanding how we can talk to you best.
  utter_explain_nlu:
    - text: |-
        NLU understands the user‚Äôs message based on your previous training data:
        - Intent classification: Interpreting meaning based on predefined intents (Example: ‚ÄúPlease send the confirmation to amy@example.com‚Äù is a send_confirmation intent with 93% confidence)
        - Entity extraction: Recognizing structured data (Example: amy@example.com is an email).
  utter_explain_person_name:
    - text: To be able to contact you later on, we would like to know your name.
  utter_explain_rasa_components:
    - text: Alright, I'll briefly explain the components that make up Rasa then.
  utter_explain_use_case:
    - text: In order to help you best, we need to know what you want to build with Rasa.
  utter_explain_x:
    - text: Rasa X is a toolset used to improve contextual assistants built using Rasa Open Source by helping you turn real user conversations into training data. Rasa X includes a user interface and a REST API.
  utter_faq_channels_more:
    - text: Please read our [documentation](https://rasa.com/docs/rasa/user-guide/messaging-and-voice-channels/) for more information.
  utter_faq_languages_more:
    - text: Please read our [documentation](https://rasa.com/docs/rasa/nlu/language-support/) for more information.
  utter_faq_ee_more:
    - text: Please read the Rasa X [documentation](https://rasa.com/docs/rasa-x/) for more information.
  utter_faq_slots_more:
    - text: Please read our [documentation](https://rasa.com/docs/rasa/core/slots/) for more information.
  utter_faq_voice_more:
    - text: Please read our [documentation](https://rasa.com/docs/rasa/user-guide/messaging-and-voice-channels/) for more information.
  utter_tutorialnlu:
    - text: Rasa Masterclass episodes 2-4 focus on NLU. Check out episode 2 [here](https://www.youtube.com/watch?v=k5UeywXA28k).
  utter_first_bot_with_rasa:
    - text: I can give you more specific info depending on where you're at in your Rasa journey. Are you new to Rasa?
  utter_getstarted:
    - text: To determine how I can help you best, I'm going to ask you a few questions.
  utter_getstarted_new:
    - text: I see you‚Äôre new, let me ask you a quick question to determine how best I can help you.
  utter_great:
    - text: Great! üëç
    - text: That's great! üôå
    - text: Awesome! üéâ
    - text: Cool, let's do it üöÄ
  # utter_greet:
  # - text: Hey there, my name is Sara.
  # - text: Hi, I'm Sara!
  # - text: Hi! My name's Sara.
  utter_greet_name:
    - text: Hi, {name}!
    - text: Hello, {name}!
    - text: Hey, {name}!
  utter_greet_noname:
    - text: Hey!
    - text: Hi!
    - text: Hey there!
  utter_have_you_used_rasa_before:
    - text: Have you used Rasa before?
  utter_inform_privacypolicy:
    - text: By chatting to me you agree to our [privacy policy](https://rasa.com/privacy-policy/).
  utter_installation_command:
    - text: |-
        You will first need to install Rasa Open Source using this installation command. 

        "pip install rasa"
  utter_installation_command_followup:
    - text: |-
        Once you're done, you can install Rasa Open Source with pip using the following command. 

        "pip install rasa"
  utter_interested_in_starter_packs:
    - text: Got it, are you interested in seeing any example Rasa Open Source assistants to help you get started?
  utter_interested_in_installation:
    - text: Would you like to learn more about installing Rasa?
  utter_installation_instructions:
    - text: If you haven't already read the detailed instruction guide, you can look it up [here](https://rasa.com/docs/rasa/user-guide/installation/#step-by-step-installation-guide).
  utter_having_trouble_installing:
    - text: If you are having any trouble installing, you can look up detailed installation instructions [here](https://rasa.com/docs/rasa/user-guide/installation/#step-by-step-installation-guide).
  utter_ask_ready_to_build:
    - text: If you got it successfully installed, are you ready to start building a contextual assistant?
  utter_link_to_forum:
    - text: "Here's the link to the forum: [https://forum.rasa.com](https://forum.rasa.com)"
  utter_moreinformation:
    - text: Sure, we can book a sales call! Let's get to know each other first üòâ
  utter_must_accept:
    - text: We can't speak until you accept.
  utter_nlu_entity_tutorial:
    - text: "[Part 2](https://blog.rasa.com/rasa-nlu-in-depth-part-2-entity-recognition/) of the Rasa NLU In Depth series from our software engineer Tobias is a great tutorial about entity recognition."
  utter_nlu_intent_tutorial:
    - text: Check out [part 1](https://blog.rasa.com/rasa-nlu-in-depth-part-1-intent-classification/) of the Rasa NLU In Depth series from our software engineer Tobias to learn more about intent classification.
  utter_nlu_tools:
    - text: We recommend using Rasa X to easily create and classify NLU data from within a UI.
  utter_no_email:
    - text: Hmm, I'm not sure that's a valid email, please make sure to include the full address üòÖ
  utter_no_guide_for_switch:
    - text: Sorry, but we don't have a migration guide for that tool yet. You can still follow the [tutorial](https://rasa.com/docs/rasa/user-guide/rasa-tutorial/) to build a Rasa assistant based on your existing one, though!
  utter_no_more_steps:
    - text: Looks like you've already gone through all the steps!
  utter_no_speak:
    - text: I'm afraid we can't chat then üò¢
  utter_nohelp:
    - text: For now that's all I can do, so feel free to try it out. If you have any suggestions for what I should learn, let me know!
  utter_not_sure:
    - text: Hmm, not sure what you mean...
  utter_noworries:
    - text: No worries!
    - text: You're welcome!
    - text: I'm happy to help.
  utter_offer_recommendation:
    - text: Would you like me to try to recommend a pipeline?
  utter_possibilities:
    - text: |
        You can ask me about:
        - how to get started with Rasa
        - the components of Rasa,
        - booking a sales call
        - subscribing to our newsletter
  utter_possibilities_to_contribute:
    - text: Check out the [Contribute to Rasa](https://github.com/orgs/RasaHQ/projects/23) board for ideas on how to contribute code or content. You can also help by answering other members' questions on the [forum](http://forum.rasa.com).
  utter_rasa_x_local_installation:
    - text: This [page](https://rasa.com/docs/rasa-x/installation-and-setup/install/local-mode) has a guide on how to run Rasa X in local mode.
  utter_rasa_x_server_installation:
    - text: You can install Rasa X on a server using either [Docker-Compose](https://rasa.com/docs/rasa-x/installation-and-setup/install/docker-compose) or [Helm](https://rasa.com/docs/rasa-x/installation-and-setup/install/helm-chart).
  utter_rasa_components_details:
    - text: Rasa Open Source is a machine learning framework for automated text and voice-based conversations. Rasa X is a tool that helps you build, improve, and deploy AI Assistants that are powered by the Rasa Open Source framework.
  utter_react_negative:
    - text: üòï
    - text: üòû
    - text: üò•
    - text: üò¢
  utter_react_positive:
    - text: üòÑ
    - text: üòä
    - text: üëè
    - text: üòç
  utter_reasons_to_contribute:
    - text: |
        Here a few reasons why you should contribute:
        - Explore the source code in depth
        - Contribute to open source software
        - Earn [Rasa swag])(https://rasa.com/community/contribute/)!
  utter_recommend_forum:
    - text: You should join the [Rasa Community forum](https://forum.rasa.com), where you can ask questions about Rasa Open Source and Rasa X, find resources, and stay up-to-date with what's happening at Rasa.
  utter_response_why_email:
    - text: I need your email address to sign you up to the newsletter.
    - text: I need it so that I can sign you up to the newsletter.
  utter_restart:
    - text: Loading... And I've been restarted! ü§Ø
    - text: Congrats you've restarted me! üòâ
  utter_restart_with_button:
    - buttons:
        - payload: /restart
          title: Restart
      text: Click the button below if you want to start over.
  utter_run_rasa_init:
    - text: |-
        You can now create a new Rasa assistant and also talk to it by simply running "rasa init".
        This comes with some sample training data and the required configuration files to get you started. You can also talk to the assistant after it is done training.
  utter_sales_contact:
    - text: Thanks, now I need to know how we can reach you.
  utter_salesrequest_failed:
    - text: Unfortunately we weren't able to store your information. Sorry about that! You can still contact sales via our [website](https://rasa.com/contact-sales/) üôÇ
  utter_search_bar:
    - text: Try using the search bar above for now.
  utter_source_code:
    - text: Like Rasa Open Source, my code is freely available on GitHub! You can find it [here](https://github.com/RasaHQ/rasa-demo) üëª
  utter_starter_pack_info:
    - text: We have example for a Financial Services Assistant available [here](https://github.com/RasaHQ/financial-demo) and a Helpdesk Assistant available [here](https://github.com/RasaHQ/helpdesk-assistant).
  utter_pipeline_english:
    - text: If your training data is in English, a good starting point is this [recommended pipeline](https://rasa.com/docs/rasa/nlu/choosing-a-pipeline/#the-short-answer), which uses both pretrained and supervised embeddings.
  utter_spacy:
    - text: SpaCy has excellent pre-trained named-entity recognizers for this -- check out this [interactive demo](https://demos.explosion.ai/displacy-ent/). I would suggest using the [SpacyEntityExtractor](https://rasa.com/docs/rasa/nlu/components/#spacyentityextractor) component in your pipeline.
  utter_pipeline_nonenglish_spacy:
    - text: Looks like for your {language} assistant, a good starting point is the [recommended pipeline](https://rasa.com/docs/rasa/nlu/choosing-a-pipeline/#the-short-answer) for languages other than English. If you want to use pretrained embeddings, the [pipeline using SpacyNLP](https://rasa.com/docs/rasa/nlu/choosing-a-pipeline/#a-longer-answer) also works for your language.
  utter_schedule_enterprise_demo:
    - text: You can schedule a technical demo of Rasa Enterprise by visiting this [page](https://info.rasa.com/rasa-technical-demo).
  utter_suggestion:
    - text: I don't have a skill to help you with this stage yet, but please ask any questions you have so I can learn them in the future!
  utter_switch_dialogflow:
    - text: We have a guide for migrating from DialogFlow [here](https://www.rasa.com/docs/rasa/migrate-from/google-dialogflow-to-rasa/).
  utter_switch_luis:
    - text: We have a guide for migrating from LUIS [here](https://www.rasa.com/docs/rasa/migrate-from/microsoft-luis-to-rasa/).
  utter_pipeline_nonenglish_nospacy:
    - text: For {language}, a good starting point is the [recommended pipeline](https://rasa.com/docs/rasa/nlu/choosing-a-pipeline/#the-short-answer) for languages other than English.
  utter_thank_suggestion:
    - text: Thanks for your input!
  utter_thumbsup:
    - text: üëç
    - text: Okay.
    - text: Got it.
  utter_what_help:
    - text: Ok, what can I help you with?
  utter_what_language:
    - text: Which (human) language is your assistant in?
  utter_x_tutorial:
    - text: Rasa Masterclass covers how to [set up Rasa X](https://www.youtube.com/watch?v=IUYdwy8HPVc) and how to [improve your assistant](https://www.youtube.com/watch?v=LWzsS5Q-RoI) by sharing your assistant with others.
  utter_ask_rephrase:
    - text: Can you rephrase the question?
  utter_no_further_info:
    - text: Sorry, that's all the info I've got on that subject üòï
  utter_why_rasa:
    - text: Rasa provides the infrastructure and tools needed to build high-performing, resilient assistants that work. What's more, Rasa is **open source** - no black-box magic!
  utter_ask_more:
    - text: Would you like to learn more?
  utter_ask_more_details:
    - text: Could you be more specific?
    - text: Can you tell me more?
  utter_ask_more_migrate:
    - text: Would you like to learn more about the advantages of switching to Rasa?
  utter_why_rasa_research:
    - text: Rasa invests in extensive research to create leading-edge conversational AI, enabling developers to create the best text- and voice-based assistants without a dedicated research team.
  utter_why_rasa_nlu:
    - text: Rasa's NLU supports multiple languages, single and multiple intents, and both pre-trained and custom entities.
  utter_why_rasa_dialogue:
    - text: Assistants built on Rasa can hold meaningful conversations with users - multi-step conversations that remember context and integrate business logic. No state machines here!
  utter_why_rasa_os:
    - text: Because Rasa is open source, you can customize your bot and explore its inner workings as much as you'd like. There's no vendor lock in, and no hidden algorithms.
  utter_why_rasa_compliant:
    - text: If data security and compliance is a priority for you, Rasa has your back! You can deploy Rasa either in the cloud or on premise and maintain complete control over your assistant & its data.

actions:
  # templates (as they are reply actions),
  # also custom actions if any
  - utter_greet
  - utter_greet_with_name
  - utter_bye
  - utter_unclear
  - utter_func_list
  - utter_thank
  - utter_ask_name
  - utter_open
  - utter_address
  - utter_phone
  - utter_discount
  - utter_payment
  - utter_ship
  - utter_sell
  - utter_iphone
  - utter_samsung
  - utter_fix
  - utter_warranty
  - utter_how_can_I_help
  - utter_ask_ram
  - utter_ask_camera
  - utter_ask_battery
  - utter_ask_budget
  - utter_wrong_camera
  - utter_wrong_battery
  - utter_wrong_ram
  - utter_wrong_budget
  - utter_goodbye
  - action_search
  - action_show_latest_news
  - utter_ask_battery_backup
  - utter_ask_storage_capacity
  - utter_wrong_battery_backup
  - utter_wrong_storage_capacity
  - action_search_results
  - utter_ask_price
  - action_my_fallback
  - utter_iamabotE
  - utter_ask_ramE
  - utter_goodbyeE
  - utter_how_can_I_helpE
  - utter_ask_cameraE
  - utter_ask_priceE
  - utter_greetE
  - action_trigger_response_selector
  - action_default_ask_affirmation
  - action_default_fallback
  - action_restart_with_button
  - action_docs_search
  - action_explain_sales_form
  - action_set_faq_slot
  - action_explain_faq
  - action_forum_search
  - action_get_community_events
  - action_greet_user
  - action_pause
  - action_set_onboarding
  - action_store_bot_language
  - action_store_entity_extractor
  - action_store_problem_description
  - action_store_unknown_nlu_part
  - action_store_unknown_product
  - action_tag_docs_search
  - action_tag_feedback
  - action_submit_subscribe_newsletter_form
  - action_submit_sales_form
  - action_submit_suggestion_form
  - validate_subscribe_newsletter_form
  - validate_sales_form
session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true

